# This file is autogenerated by maturin v1.0.1
# To update, run
#
#    maturin generate-ci github --pytest
#
name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    - uses: pre-commit/action@v3.0.0

  cargo-clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: install rust stable
      uses: dtolnay/rust-toolchain@stable
    - name: cache rust
      uses: Swatinem/rust-cache@v2
    - name: Run clippy
      run: cargo clippy

  test-python:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        - 'pypy3.8'
    steps:
      - uses: actions/checkout@v3
      - name: install rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          key: test-v1
      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -e .[testing]
        env:
          RUST_BACKTRACE: 1
      - run: pip freeze
      - run: pytest

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
        - x86_64
        - x86
        - aarch64
        - armv7
        # - s390x  # TODO build fails: "error: failed to run custom build command for `psm v0.1.21`""
        - ppc64le
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
      - name: pytest
        if: ${{ startsWith(matrix.target, 'x86_64') }}
        shell: bash
        run: |
          set -e
          pip install markdown_it_pyrs --find-links dist --force-reinstall
          pip install pytest pytest-param-files
          pytest
      - name: pytest
        if: ${{ !startsWith(matrix.target, 'x86') && matrix.target != 'ppc64' }}
        uses: uraimo/run-on-arch-action@v2.5.0
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip pytest pytest-param-files
          run: |
            set -e
            pip3 install markdown_it_pyrs --find-links dist --force-reinstall
            pytest

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
      - name: pytest
        if: ${{ !startsWith(matrix.target, 'aarch64') }}
        shell: bash
        run: |
          set -e
          pip install markdown_it_pyrs --find-links dist --force-reinstall
          pip install pytest pytest-param-files
          pytest

  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
      - name: pytest
        if: ${{ !startsWith(matrix.target, 'aarch64') }}
        shell: bash
        run: |
          set -e
          pip install markdown_it_pyrs --find-links dist --force-reinstall
          pip install pytest pytest-param-files
          pytest

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  # https://github.com/marketplace/actions/alls-green#why used for branch protection checks
  check:
    if: always()
    needs: [pre-commit, cargo-clippy, test-python, linux, windows, macos, sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-failures: coverage

  release:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [pre-commit, cargo-clippy, test-python, linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
